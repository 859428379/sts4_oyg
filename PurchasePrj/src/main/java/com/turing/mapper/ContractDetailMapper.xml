<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turing.mapper.ContractDetailMapper">
  <resultMap id="BaseResultMap" type="com.turing.entity.ContractDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cont_id" jdbcType="BIGINT" property="contId" />
    <result column="material_code" jdbcType="VARCHAR" property="materialCode" />
    <result column="material_name" jdbcType="VARCHAR" property="materialName" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="measure_unit" jdbcType="VARCHAR" property="measureUnit" />
    <result column="sum_price" jdbcType="DECIMAL" property="sumPrice" />
    <result column="mix_price" jdbcType="DECIMAL" property="mixPrice" />
    <result column="other_price" jdbcType="DECIMAL" property="otherPrice" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="end_date" jdbcType="VARCHAR" property="endDate" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mode" jdbcType="VARCHAR" property="mode" />
    <result column="wrap_require" jdbcType="VARCHAR" property="wrapRequire" />
    <result column="factory" jdbcType="VARCHAR" property="factory" />
    <result column="other_require" jdbcType="VARCHAR" property="otherRequire" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cont_id, material_code, material_name, amount, unit_price, measure_unit, sum_price, 
    mix_price, other_price, total_price, end_date, address, `mode`, wrap_require, factory, 
    other_require
  </sql>
  <select id="selectByExample" parameterType="com.turing.entity.ContractDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from contract_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.turing.entity.ContractDetailExample">
    delete from contract_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.turing.entity.ContractDetail">
    insert into contract_detail (id, cont_id, material_code, 
      material_name, amount, unit_price, 
      measure_unit, sum_price, mix_price, 
      other_price, total_price, end_date, 
      address, `mode`, wrap_require, 
      factory, other_require)
    values (#{id,jdbcType=BIGINT}, #{contId,jdbcType=BIGINT}, #{materialCode,jdbcType=VARCHAR}, 
      #{materialName,jdbcType=VARCHAR}, #{amount,jdbcType=VARCHAR}, #{unitPrice,jdbcType=DECIMAL}, 
      #{measureUnit,jdbcType=VARCHAR}, #{sumPrice,jdbcType=DECIMAL}, #{mixPrice,jdbcType=DECIMAL}, 
      #{otherPrice,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, #{endDate,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{mode,jdbcType=VARCHAR}, #{wrapRequire,jdbcType=VARCHAR}, 
      #{factory,jdbcType=VARCHAR}, #{otherRequire,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.turing.entity.ContractDetail">
    insert into contract_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contId != null">
        cont_id,
      </if>
      <if test="materialCode != null">
        material_code,
      </if>
      <if test="materialName != null">
        material_name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="measureUnit != null">
        measure_unit,
      </if>
      <if test="sumPrice != null">
        sum_price,
      </if>
      <if test="mixPrice != null">
        mix_price,
      </if>
      <if test="otherPrice != null">
        other_price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mode != null">
        `mode`,
      </if>
      <if test="wrapRequire != null">
        wrap_require,
      </if>
      <if test="factory != null">
        factory,
      </if>
      <if test="otherRequire != null">
        other_require,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="contId != null">
        #{contId,jdbcType=BIGINT},
      </if>
      <if test="materialCode != null">
        #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="measureUnit != null">
        #{measureUnit,jdbcType=VARCHAR},
      </if>
      <if test="sumPrice != null">
        #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="mixPrice != null">
        #{mixPrice,jdbcType=DECIMAL},
      </if>
      <if test="otherPrice != null">
        #{otherPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mode != null">
        #{mode,jdbcType=VARCHAR},
      </if>
      <if test="wrapRequire != null">
        #{wrapRequire,jdbcType=VARCHAR},
      </if>
      <if test="factory != null">
        #{factory,jdbcType=VARCHAR},
      </if>
      <if test="otherRequire != null">
        #{otherRequire,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.turing.entity.ContractDetailExample" resultType="java.lang.Long">
    select count(*) from contract_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contract_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.contId != null">
        cont_id = #{record.contId,jdbcType=BIGINT},
      </if>
      <if test="record.materialCode != null">
        material_code = #{record.materialCode,jdbcType=VARCHAR},
      </if>
      <if test="record.materialName != null">
        material_name = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.measureUnit != null">
        measure_unit = #{record.measureUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.sumPrice != null">
        sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.mixPrice != null">
        mix_price = #{record.mixPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.otherPrice != null">
        other_price = #{record.otherPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mode != null">
        `mode` = #{record.mode,jdbcType=VARCHAR},
      </if>
      <if test="record.wrapRequire != null">
        wrap_require = #{record.wrapRequire,jdbcType=VARCHAR},
      </if>
      <if test="record.factory != null">
        factory = #{record.factory,jdbcType=VARCHAR},
      </if>
      <if test="record.otherRequire != null">
        other_require = #{record.otherRequire,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contract_detail
    set id = #{record.id,jdbcType=BIGINT},
      cont_id = #{record.contId,jdbcType=BIGINT},
      material_code = #{record.materialCode,jdbcType=VARCHAR},
      material_name = #{record.materialName,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=VARCHAR},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      measure_unit = #{record.measureUnit,jdbcType=VARCHAR},
      sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      mix_price = #{record.mixPrice,jdbcType=DECIMAL},
      other_price = #{record.otherPrice,jdbcType=DECIMAL},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      end_date = #{record.endDate,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      `mode` = #{record.mode,jdbcType=VARCHAR},
      wrap_require = #{record.wrapRequire,jdbcType=VARCHAR},
      factory = #{record.factory,jdbcType=VARCHAR},
      other_require = #{record.otherRequire,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.turing.entity.ContractDetail">
    update contract_detail
    <set>
      <if test="contId != null">
        cont_id = #{contId,jdbcType=BIGINT},
      </if>
      <if test="materialCode != null">
        material_code = #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="measureUnit != null">
        measure_unit = #{measureUnit,jdbcType=VARCHAR},
      </if>
      <if test="sumPrice != null">
        sum_price = #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="mixPrice != null">
        mix_price = #{mixPrice,jdbcType=DECIMAL},
      </if>
      <if test="otherPrice != null">
        other_price = #{otherPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mode != null">
        `mode` = #{mode,jdbcType=VARCHAR},
      </if>
      <if test="wrapRequire != null">
        wrap_require = #{wrapRequire,jdbcType=VARCHAR},
      </if>
      <if test="factory != null">
        factory = #{factory,jdbcType=VARCHAR},
      </if>
      <if test="otherRequire != null">
        other_require = #{otherRequire,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.turing.entity.ContractDetail">
    update contract_detail
    set cont_id = #{contId,jdbcType=BIGINT},
      material_code = #{materialCode,jdbcType=VARCHAR},
      material_name = #{materialName,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=VARCHAR},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      measure_unit = #{measureUnit,jdbcType=VARCHAR},
      sum_price = #{sumPrice,jdbcType=DECIMAL},
      mix_price = #{mixPrice,jdbcType=DECIMAL},
      other_price = #{otherPrice,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      end_date = #{endDate,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      `mode` = #{mode,jdbcType=VARCHAR},
      wrap_require = #{wrapRequire,jdbcType=VARCHAR},
      factory = #{factory,jdbcType=VARCHAR},
      other_require = #{otherRequire,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>